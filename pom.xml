<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>kr.or.connect</groupId>
    <artifactId>mavenwebservlet</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>mavenwebservlet Maven Webapp</name>
    <url>http://www.example.com</url>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>
    <dependencies>
        <!--
        Servlet 라이브러리 설정
        Servlet 라이브러리는 컴파일 시에만 사용되고, 배포 시에는 제거되도록 <scope>provided</scope> 설정
        (실제 런타임 때에는 WAS(Tomcat 등) 컨테이너에서 제공되기 때문이다.)
        -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <!--
            scope 4가지
            1. compile(기본 값): 컴파일 할 때 필요한 경우(테스트 및 런타임에도 클래스 패스에 포함된다.)
            2. runtime: 런타임에 필요한 경우(JDBC 드라이버가 이에 해당 함. / 컴파일 시에는 필요하지 않지만, 실행 시에 필요한 경우이다.)
            3. provided: 컴파일 시에는 필요하지만 실제 런타임 때에는 필요하지 않는 경우(WAS에서 제공하는 모듈, Servlet, JSP API 등이 이에 해당한다. / 배포시 제외 된다.)
            4. test: 테스크 코드를 컴파일하는 경우(테스트 시 클래스 패스에 포함되며, 배포 시 제외된다.)
            -->
            <scope>provided</scope>
        </dependency>

        <!--
        JSTL 라이브러리 설정
        WAS가 기본으로 제공하지 않기 때문에, 컴파일 할 때도, 배포 할 때도 사용되어야 하므로 <scope>compile</scope> 설정
        -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>

        <!-- MySQL 라이브러리 설정¬ -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.45</version>
        </dependency>

        <!-- 테스트를 위한 JUnit4 라이브러리 설정 -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <finalName>mavenwebservlet</finalName>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.22.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.2.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>